@page "/Dashboard"
@layout MainLayout
@using WorkstreamClient.DTO
@using WorkstreamClient.Services
@inject OrderService OrderService
@inject InventoryService InventoryService
@inject CustomerService CustomerService

<div class="dashboard-container">
    <!-- Summary Cards Section -->
    <div class="summary-cards">
        <div class="card">
            <div class="card-icon customers-icon">
                <i class="oi oi-people"></i>
            </div>
            <div class="card-data">
                <h3>Total Customers</h3>
                <p class="number">@(customers.Count)</p>
                <p class="detail">Active accounts</p>
            </div>
        </div>

        <div class="card">
            <div class="card-icon orders-icon">
                <i class="oi oi-basket"></i>
            </div>
            <div class="card-data">
                <h3>Total Orders</h3>
                <p class="number">@(allOrders.Count)</p>
                <p class="detail">Processed orders</p>
            </div>
        </div>

        <div class="card">
            <div class="card-icon value-icon">
                <i class="oi oi-dollar"></i>
            </div>
            <div class="card-data">
                <h3>Order Value</h3>
                <p class="number">$@(CalculateTotalOrderValue().ToString("N2"))</p>
                <p class="detail">Total sales</p>
            </div>
        </div>

        <div class="card">
            <div class="card-icon inventory-icon">
                <i class="oi oi-box"></i>
            </div>
            <div class="card-data">
                <h3>Inventory Items</h3>
                <p class="number">@(inventoryItems.Count)</p>
                <p class="detail">Products in stock</p>
            </div>
        </div>
    </div>

    <!-- Data Panels Section -->
    <div class="data-panels">
        <div class="panel">
            <div class="panel-header">
                <h2>Recent Orders</h2>
                <button class="view-all-btn" @onclick="NavigateToOrdersPage">View All</button>
            </div>
            <div class="panel-content">
                @if (isLoading)
                {
                    <div class="loading-indicator">
                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                        <span class="ml-2">Loading orders...</span>
                    </div>
                }
                else if (allOrders.Count == 0)
                {
                    <div class="empty-state">
                        <p>No orders found.</p>
                    </div>
                }
                else
                {
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Date</th>
                                <th>Total</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in allOrders.OrderByDescending(o => o.OrderDate).Take(5))
                            {
                                var customer = customers.FirstOrDefault(c => c.CustomerId == order.CustomerId);
                                <tr>
                                    <td>#@order.OrderId</td>
                                    <td>@(customer?.Name ?? $"Customer {order.CustomerId}")</td>
                                    <td>@order.OrderDate.ToString("MMM d, yyyy")</td>
                                    <td>$@(order.OrderItems?.Sum(i => i.Quantity * i.Price).ToString("N2") ?? "0.00")</td>
                                    <td><span class="status-@order.Status.ToLower()">@order.Status</span></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>

        <div class="panel">
            <div class="panel-header">
                <h2>Low Stock Items</h2>
                <button class="view-all-btn" @onclick="NavigateToInventoryPage">View All</button>
            </div>
            <div class="panel-content">
                @if (isLoading)
                {
                    <div class="loading-indicator">
                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                        <span class="ml-2">Loading inventory...</span>
                    </div>
                }
                else if (inventoryItems.Count == 0)
                {
                    <div class="empty-state">
                        <p>No inventory items found.</p>
                    </div>
                }
                else
                {
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Product</th>
                                <th>Current Stock</th>
                                <th>Price</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in inventoryItems.OrderBy(i => i.Name).Take(5))
                            {
                                <tr>
                                    <td>#@item.InventoryItemId</td>
                                    <td>@item.Name</td>
                                    <td>@item.TotalStock</td>  <!-- Showing total stock -->
                                    <td>$@item.Price.ToString("N2")</td>
                                    <td><span class="status-in-stock">In Stock</span></td> <!-- Placeholder for stock status -->
                                </tr>
                            }
                        </tbody>

                    </table>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<InventoryItemReadDTO> inventoryItems = new List<InventoryItemReadDTO>();
    private List<OrderReadDTO> allOrders = new List<OrderReadDTO>();
    private List<CustomerReadDTO> customers = new List<CustomerReadDTO>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        // Load all data in parallel
        var inventoryTask = InventoryService.GetAllInventoryItemsAsync();
        var ordersTask = OrderService.GetAllOrdersAsync();
        var customersTask = CustomerService.GetAllCustomersAsync();

        try
        {
            // Wait for all tasks to complete
            await Task.WhenAll(inventoryTask, ordersTask, customersTask);

            // Assign results
            inventoryItems = await inventoryTask;
            allOrders = await ordersTask;
            customers = await customersTask;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading dashboard data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private decimal CalculateTotalOrderValue()
    {
        decimal total = 0;

        foreach (var order in allOrders)
        {
            if (order.OrderItems != null)
            {
                total += order.OrderItems.Sum(item => item.Quantity * item.Price);
            }
        }

        return total;
    }

    private void NavigateToOrdersPage()
    {
        // Add your navigation logic here
        // NavigationManager.NavigateTo("/order");
    }

    private void NavigateToInventoryPage()
    {
        // Add your navigation logic here
        // NavigationManager.NavigateTo("/inventory");
    }
}


<style>
    /* Dashboard Container */
    .dashboard-container {
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Summary Cards Styles */
    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .card {
        display: flex;
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        padding: 20px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

    .card-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 50px;
        height: 50px;
        border-radius: 12px;
        margin-right: 15px;
        font-size: 24px;
        color: white;
    }

    .customers-icon {
        background-color: #3a86ff;
    }

    .orders-icon {
        background-color: #7209b7;
    }

    .value-icon {
        background-color: #38b000;
    }

    .inventory-icon {
        background-color: #f72585;
    }

    .card-data {
        flex: 1;
    }

        .card-data h3 {
            margin: 0 0 5px 0;
            font-size: 16px;
            color: #6c757d;
        }

        .card-data .number {
            margin: 0;
            font-size: 24px;
            font-weight: bold;
            color: #212529;
        }

        .card-data .detail {
            margin: 5px 0 0 0;
            font-size: 13px;
            color: #6c757d;
        }

    /* Data Panels Styles */
    .data-panels {
        display: grid;
        grid-template-columns: 1fr;
        gap: 30px;
    }


    .panel {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        overflow: hidden;
    }

    .panel-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        border-bottom: 1px solid #f1f1f1;
    }

        .panel-header h2 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
            color: #212529;
        }

    .view-all-btn {
        background-color: transparent;
        border: none;
        color: #4361ee;
        font-size: 14px;
        cursor: pointer;
    }

        .view-all-btn:hover {
            text-decoration: underline;
        }

    .panel-content {
        padding: 0;
        overflow-x: auto;
    }

    /* Table Styles */
    .data-table {
        width: 100%;
        border-collapse: collapse;
    }

        .data-table th {
            text-align: left;
            padding: 12px 20px;
            font-size: 14px;
            font-weight: 600;
            color: #495057;
            background-color: #f8f9fa;
        }

        .data-table td {
            padding: 12px 20px;
            font-size: 14px;
            color: #212529;
            border-top: 1px solid #f1f1f1;
        }

        .data-table tbody tr:hover {
            background-color: #f8f9fa;
        }

    /* Status Indicators */
    .status-paid, .status-delivered, .status-normal {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
        background-color: #d1fae5;
        color: #065f46;
    }

    .status-pending, .status-processing {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
        background-color: #dbeafe;
        color: #1e40af;
    }

    .status-out {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
        background-color: #fee2e2;
        color: #b91c1c;
    }

    .status-low {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
        background-color: #fef3c7;
        color: #92400e;
    }

    /* Loading Indicator */
    .loading-indicator {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 30px;
        color: #6c757d;
    }

    /* Empty State */
    .empty-state {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 30px;
        color: #6c757d;
        font-style: italic;
    }
</style>
